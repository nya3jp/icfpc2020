(define add (lambda (x) (lambda (y) (+ x y))))
(define b (lambda (x) (lambda (y) (lambda (z) (x (y z))))))
(define c (lambda (x) (lambda (y) (lambda (z) ((x z) y)))))
(define car (lambda (x) (lambda (y) x)))
(define cdr (lambda (x) (lambda (y) y)))
(define cons (lambda (x) (lambda (y) (lambda (z) ((z x) y)))))
(define div (lambda (x) (lambda (y) (/ x y))))
(define eq (lambda (x) (lambda (y) (if (= x y) car cdr))))
(define i (lambda (x) x))
(define isnil (lambda (x) (if (= x 'nil) car cdr)))
(define lt (lambda (x) (lambda (y) (if (< x y) car cdr))))
(define mul (lambda (x) (lambda (y) (* x y))))
(define neg (lambda (x) (- x)))
(define nil 'nil)
(define s (lambda (x) (lambda (y) (lambda (z) ((x z) (y z))))))
(define t car)

